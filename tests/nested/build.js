/* YABS.js 0.0.0 (c) 2023 Danijel Durakovic
 * https://github.com/pulzed/yabs.js
 * Licensed under the MIT license */
const path=require("path"),fs=require("fs"),exec=require("child_process")["exec"],EOL=require("os")["EOL"],yabs={version:"0.0.0",DEFAULT_BUILD_ALL_FILE:"build_all.json",DEFAULT_BUILD_FILE:"build.json",COMPILED_SOURCE_EXTENSION:".min.js",PREPROCESS_FILE_EXTENSION:".pre",COMPILE_FILE_EXTENSION:".cmp",util:{}};yabs.util.exists=function(i){return fs.existsSync(i)},yabs.util.isDirectory=function(i){return fs.lstatSync(i).isDirectory()},yabs.util.getModifiedTime=function(i){return fs.statSync(i).mtime},yabs.util.isSourceNewer=function(i,t){i=Date.now()-yabs.util.getModifiedTime(i);return 1e3<=Date.now()-yabs.util.getModifiedTime(t)-i},yabs.util.getFilesWithRecursiveDescent=function(s,r,a,n=0){let o=[];if(yabs.util.exists(s))return fs.readdirSync(s).forEach(i=>{var t=path.join(s,i),i=path.join(r,i);if(yabs.util.isDirectory(t))"*"===a[0]&&null===a[1]&&(o=o.concat(yabs.util.getFilesWithRecursiveDescent(t,i,a,n+1)));else{if("*"===a[0]&&"*"!==a[1]&&null!==a[1]){var e=path.parse(t);if(a[1]!==e.ext)return}yabs.util.exists(i)&&!yabs.util.isSourceNewer(t,i)||o.push({source:t,destination:i})}}),o;throw"Could not locate path: "+s},yabs.util.parseJSDocTagsFromFile=function(i){const s=[];const r=/\*\s*@(\w+)\s+(.+)/g;i=fs.readFileSync(i,{encoding:"utf8",flag:"r"}).match(/\/\*\*(.*?)\*\//gs);return i&&i.forEach(i=>{for(;null!==(e=r.exec(i));){var t=e[1],e=e[2];s.push([t,e])}}),s},yabs.Logger=class{constructor(){var i=process.stdout.isTTY;this._OUTPUT_RESET=i?"[0m":"",this._OUTPUT_BRIGHT=i?"[1m":"",this._OUTPUT_FG_RED=i?"[31m":"",this._OUTPUT_FG_GREEN=i?"[32m":""}out(i){process.stdout.write(i+`
`)}out_raw(i){process.stdout.write(i)}ok(){process.stdout.write(" "+this._OUTPUT_BRIGHT+this._OUTPUT_FG_GREEN+`ok${this._OUTPUT_RESET}
`)}info(i){process.stdout.write(`* ${i}

`)}endl(){process.stdout.write("\n")}error(i){process.stdout.write(""+this._OUTPUT_BRIGHT+this._OUTPUT_FG_RED+"Error: "+this._OUTPUT_RESET+i+`
`)}success(i){process.stdout.write(""+this._OUTPUT_BRIGHT+this._OUTPUT_FG_GREEN+"Success: "+this._OUTPUT_RESET+i+`
`)}header(){this.out_raw(""+this._OUTPUT_BRIGHT+this._OUTPUT_FG_GREEN),this.out("  __ __ _____ _____ _____     _"),this.out(" |  |  |  _  |  _  |   __|   |_|___"),this.out("  \\_   |     |  _ -|__   |_  | |_ -|"),this.out("   /__/|__|__|_____|_____|_|_| |___|"),this.out("                           |___|"),this.out_raw(""+this._OUTPUT_RESET),this.out(" Yet"),this.out(" Another"+" ".repeat(32-yabs.version.length)+"[ v"+yabs.version+" ]"),this.out(" Build      https://github.com/pulzed/yabs.js"),this.out(" System.js         (c) 2023 Danijel Durakovic"),this.endl(),this.out("---------------------------------------------"),this.endl()}},yabs.BuildConfig=class{constructor(i){var t=path.parse(i),t=(this._source_file=t.base,this._base_dir=t.dir,fs.readFileSync(i,{encoding:"utf8",flag:"r"}));const _=JSON.parse(t);if(_.hasOwnProperty("batch_build")){if(this._is_batch=!0,this._batch_listing=[],_.batch_build instanceof Array)return void _.batch_build.forEach(i=>{var t;"string"==typeof i?this._batch_listing.push({file:i}):"object"==typeof i&&null!==i&&(t={},i.hasOwnProperty("file")&&"string"==typeof i.file&&(t.file=i.file),i.hasOwnProperty("options")&&"string"==typeof i.options&&(t.options=i.options),t.file)&&this._batch_listing.push(t)});throw'The "batch_build" entry in build instructions file has to be an Array type!'}if(!_.hasOwnProperty("source_dir"))throw"Build instructions file is missing the source_dir entry!";if(this._source_dir=_.source_dir,!_.hasOwnProperty("destination_dir"))throw"Build instructions file is missing the destination_dir entry!";if(this._destination_dir=_.destination_dir,_.hasOwnProperty("html"))if(_.html instanceof Array){if(!_.html.every(i=>"string"==typeof i))throw'Every element in "html" entry listing has to be a String type!';this._html_listing=_.html}else"string"==typeof _.html&&(this._html_listing=[_.html]);if(this._html_listing||(this._html_listing=[]),_.hasOwnProperty("sources")){if(!(_.sources instanceof Array))throw'The "sources" entry in build instructions file has to be an Array type!';this._sources_listing=[],_.sources.forEach(i=>{if("string"==typeof i)this._sources_listing.push({file:i});else if("object"==typeof i&&null!==i){var t={};if(i.hasOwnProperty("file")&&"string"==typeof i.file&&(t.file=i.file),i.hasOwnProperty("output_file")&&"string"==typeof i.output_file&&(t.output_file=i.output_file),i.hasOwnProperty("header"))if(i.header instanceof Array){if(!i.header.every(i=>"string"==typeof i))throw'Every element in "sources" entry "header" listing has to be a String type!';t.header=i.header}else"string"==typeof i.header&&(t.header=[i.header]);else if(i.hasOwnProperty("use_header")&&_.headers&&"string"==typeof i.use_header&&_.headers.hasOwnProperty(i.use_header)){var e=_.headers[i.use_header];if(e instanceof Array){if(!e.every(i=>"string"==typeof i))throw'Every element in "headers" listing has to be a String type!';t.header=e}else"string"==typeof e&&(t.header=[e])}if(i.hasOwnProperty("variables")){if("object"==typeof i.variables&&!(i.variables instanceof Array)&&null!==i.variables){t.variables={};for(const n in i.variables){var s=i.variables[n];if(s instanceof Array){if(!s.every(i=>"string"==typeof i))throw'Every element in "variables" listing has to be a String type!';t.variables[n]=s}}}}else if(i.hasOwnProperty("use_variables")&&_.variables&&"string"==typeof i.use_variables&&_.variables.hasOwnProperty(i.use_variables)){var r=_.variables[i.use_variables];if("object"==typeof r&&!(r instanceof Array)&&null!==r){t.variables={};for(const o in r){var a=r[o];if(a instanceof Array){if(!a.every(i=>"string"==typeof i))throw'Every element in "variables" listing has to be a String type!';t.variables[o]=a}}}}i.hasOwnProperty("preprocess")&&!0===i.preprocess&&(t.preprocess=!0),t.file&&this._sources_listing.push(t)}})}if(this._sources_listing||(this._sources_listing=[]),_.hasOwnProperty("files"))if(_.files instanceof Array){if(!_.files.every(i=>"string"==typeof i))throw'Every element in "files" entry listing has to be a String type!';this._files_listing=_.files}else"string"==typeof _.files&&(this._files_listing=[_.files]);this._files_listing||(this._files_listing=[])}getSourceFile(){return this._source_file}getBaseDir(){return this._base_dir}isBatchBuild(){return this._is_batch}getBatchListing(){return this._batch_listing}getSourceDir(){return this._source_dir}getDestinationDir(){return this._destination_dir}getHTMLListing(){return this._html_listing}getSourcesListing(){return this._sources_listing}getFilesListing(){return this._files_listing}},yabs.Builder=class{constructor(i,t,e){this._logger=i,this._build_config=t,this._build_params=e,this._base_dir=this._build_config.getBaseDir(),this._source_dir=path.normalize(this._build_config.getSourceDir()),this._destination_dir=path.normalize(this._build_config.getDestinationDir()),this._files_manifest=null,this._sources_manifest=null,this._html_manifest=null,this._n_files_updated=0,this._build_start_time=Date.now()}_buildManifests(){this._files_manifest=[],this._sources_manifest=[],this._html_manifest=[],function(){this._build_config.getFilesListing().forEach(i=>{if(i.includes("*")){var t=path.join(this._base_dir,this._source_dir,i),t=path.parse(t),e=path.join(this._destination_dir,i),e=path.parse(e);if(!t.dir.includes("*")&&"*"===t.name){var s=t.base.split(".");let i=null;"*"===t.base?i=["*",null]:"*.*"===t.base?i=["*","*"]:"*"===s[0]&&"*"!==s[1]&&""!==s[1]&&(i=["*",t.ext]),null!==i&&(this._files_manifest=this._files_manifest.concat(yabs.util.getFilesWithRecursiveDescent(t.dir,e.dir,i)))}}else{s=path.join(this._base_dir,this._source_dir,i),t=path.join(this._destination_dir,i);if(!yabs.util.isDirectory(s)){let i=!1;if(i=!yabs.util.exists(t)||yabs.util.isSourceNewer(s,t)?!0:i){if(s===t)throw`Source file: "${s}" cannot be the same as the destination!`;this._files_manifest.push({source:s,destination:t})}}}})}.call(this),function(){this._build_config.getSourcesListing().forEach(t=>{if(!t.file.includes("*")){var e=t.hasOwnProperty("header"),s={has_header:e},e=(e&&(s.header=[...t.header]),t.hasOwnProperty("variables")),r={has_variables:e},e=(e&&(r.variables=t.variables),!0===t.preprocess);let i;var a=path.parse(t.file),n=(i=t.output_file?(n=path.parse(t.output_file),path.join(a.dir,n.base)):path.join(a.dir,a.name+yabs.COMPILED_SOURCE_EXTENSION),path.join(this._base_dir,this._source_dir,t.file)),a=path.join(this._source_dir,t.file),t=path.join(this._destination_dir,i);if(n===t)throw`Source file: "${n}" cannot be the same as the destination!`;this._sources_manifest.push({source:n,original_source:a,destination:t,header_data:s,variables_data:r,force_preprocessor:e})}})}.call(this),function(){this._build_config.getHTMLListing().forEach(i=>{if(!i.includes("*")){var t=path.join(this._base_dir,this._source_dir,i),i=path.join(this._destination_dir,i);if(t===i)throw`Source file: "${t}" cannot be the same as the destination!`;this._html_manifest.push({source:t,destination:i})}})}.call(this)}_verifySourceFiles(){function i(i){i.forEach(i=>{var i=i.source,t=path.resolve(i);if(!yabs.util.exists(t))throw"Could not find file: "+i})}i.call(this,this._files_manifest),i.call(this,this._sources_manifest),i.call(this,this._html_manifest)}_processSourceHeaders(){this._sources_manifest.forEach(i=>{var e=i.header_data;if(e.has_header){let t=!1;if(e.header.every(i=>!/%\S+%/.test(i)&&!/\$YEAR\$/.test(i)||!(t=!0)),t){var i=i.source,s=yabs.util.parseJSDocTagsFromFile(i);for(let t=0;t<e.header.length;++t){for(let i=0;i<s.length;i++){var r=s[i];e.header[t]=e.header[t].replace(new RegExp(`%${r[0]}%`,"g"),r[1])}e.header[t]=e.header[t].replace(/\$YEAR\$/g,(new Date).getFullYear())}}}})}_buildStep_I_UpdateFiles(){this._files_manifest.forEach(i=>{this._logger.out_raw(i.destination+" ...");var t=path.dirname(i.destination);yabs.util.exists(t)||fs.mkdirSync(t,{recursive:!0}),fs.copyFileSync(i.source,i.destination),this._logger.ok(),this._n_files_updated+=1}),this._logger.endl()}async _buildStep_II_CompileSources(){function e(i,s,r){const a=path.parse(i).dir;return new Promise((t,e)=>{exec(`preprocess ${i} ${a} ${r} > `+s,i=>{i?(this._logger.out_raw("\n\n"),e(i)):t()})})}function s(i,s){return new Promise((t,e)=>{exec(`uglifyjs ${i} --compress --mangle -o `+s,i=>{i?(this._logger.out_raw("\n\n"),e(i)):t()})})}for(const _ of this._sources_manifest){this._logger.out_raw(_.destination+" ...");var r=path.dirname(_.destination);yabs.util.exists(r)||fs.mkdirSync(r,{recursive:!0});let t=!1;var r=this._build_params.variable,a=_.variables_data,n=a.has_variables;const l=a.variables;_.force_preprocessor?t=!0:n&&r.every(i=>!(t=l.hasOwnProperty(i)?!0:t));let i;if(t){const h=[];n&&r.forEach(i=>{l.hasOwnProperty(i)&&l[i].forEach(i=>{var i=i.split("="),t=i[0].trim(),i=i[1].trim();t.length&&i.length&&h.push(`-${t}=`+i)})});a=h.join(" "),n=_.source;i=_.destination+yabs.PREPROCESS_FILE_EXTENSION,await e.call(this,n,i,a)}var r=t?i:_.source,n=_.destination,a=n+yabs.COMPILE_FILE_EXTENSION,r=(await s.call(this,r,a),_.header_data),o=fs.readFileSync(a,{encoding:"utf8",flag:"r"}),r=r.has_header?r.header.join(EOL)+EOL+o:o;fs.writeFileSync(n,r,{encoding:"utf8",flag:"w"}),fs.rmSync(a,{force:!0}),t&&fs.rmSync(i,{force:!0}),this._logger.ok(),this._n_files_updated+=1}this._logger.endl()}_buildStep_III_WriteHTMLFiles(){const _=/<script\b[^>]*\bsrc=(["'])(.*?)(\1).*?>/;this._html_manifest.forEach(i=>{this._logger.out_raw(i.destination+" ...");var t=path.dirname(i.destination);yabs.util.exists(t)||fs.mkdirSync(t,{recursive:!0});t=fs.readFileSync(i.source,{encoding:"utf8",flag:"r"}).split(/\r?\n/);let e=[];t.forEach(i=>{var s=i.match(_);let r=!1,a;if(s){s=s[2];const n=path.parse(s),o=path.join(this._source_dir,n.dir,n.base);let t=!1,e;this._sources_manifest.every(i=>{return i.original_source!==o||(t=!0,i=path.parse(i.destination),e=n.dir+"/"+i.base,!1)}),t&&(r=!0,a=i.replace(s,e))}e.push(r?a:i)});t=e.join(EOL);fs.writeFileSync(i.destination,t,{encoding:"utf8",flag:"w"}),this._logger.ok(),this._n_files_updated+=1}),this._logger.endl()}async build(){var i=this._build_config.getSourceFile(),i=(this._logger.info("Starting build: "+i),this._logger.info("Preparing build ..."),this._buildManifests(),this._verifySourceFiles(),this._processSourceHeaders(),0<this._files_manifest.length&&(this._logger.info("Updating files ..."),this._buildStep_I_UpdateFiles()),0<this._sources_manifest.length&&(this._logger.info("Compiling sources ..."),await this._buildStep_II_CompileSources()),0<this._html_manifest.length&&(this._logger.info("Writing HTML files ..."),this._buildStep_III_WriteHTMLFiles()),((Date.now()-this._build_start_time)/1e3).toFixed(2));this._logger.success("Build finished!\n"),this._logger.out(`Updated ${this._n_files_updated} files.`),this._logger.out(`Build completed in ${i}s.`)}},yabs.BatchBuilder=class{constructor(i,t,e){this._logger=i,this._build_config=t,this._build_params=e,this._base_dir=this._build_config.getBaseDir(),this._batch_manifest=null,this._batch_build_start_time=Date.now()}_buildBatchManifest(){var i=this._build_config.getBatchListing();this._batch_manifest=[],i.forEach(i=>{var e=i.file;if(e.length){let t;i.options?(t=[],i.options.trim().split(/\s+/).forEach(i=>{2<=i.length&&"-"===i[0]&&t.push(i.substring(1))})):t=this._build_params.variable;i=path.join(this._base_dir,e);this._batch_manifest.push({file:i,options:t})}})}async _buildOne(i){var i=this._batch_manifest[i],t=i.file;let e=null;if(!yabs.util.exists(t))throw"Cannot find file: "+t;if((e=new yabs.BuildConfig(t)).isBatchBuild())throw"Cannot have nested batch builds: ${build_instr_file}!";t={variable:i.options};await new yabs.Builder(this._logger,e,t).build()}async build(){var t=this._build_params.option.includes("nofail"),i=this._build_config.getSourceFile();this._logger.info(`Starting ${this._logger._OUTPUT_BRIGHT}${this._logger._OUTPUT_FG_GREEN}<batch build>`+this._logger._OUTPUT_RESET+": "+i),this._buildBatchManifest();let e=0;var s=this._batch_manifest.length;let r=0,a=0;for(;e<s;){this._logger.out(`=== ${this._logger._OUTPUT_BRIGHT}${this._logger._OUTPUT_FG_GREEN}<batch build>`+`${this._logger._OUTPUT_RESET} ${e+1}/${s} ===\n`);try{await this._buildOne(e++),r++}catch(i){if(!t)throw i;this._logger.error(i),a++}this._logger.endl()}i=((Date.now()-this._batch_build_start_time)/1e3).toFixed(2);this._logger.out(`=== ${this._logger._OUTPUT_BRIGHT}${this._logger._OUTPUT_FG_GREEN}<batch build>`+this._logger._OUTPUT_RESET+` finished! ===
`),t?this._logger.out(`${r} builds finished, ${a} failed in ${i}s.`):this._logger.out(r+` builds finished in ${i}s.`)}},yabs.Application=class{constructor(){this._logger=new yabs.Logger}async main(i){const t={option:[],variable:[],free:[]};i.slice(2).forEach(i=>{i.startsWith("--")?t.option.push(i.slice(2)):i.startsWith("-")?t.variable.push(i.slice(1)):t.free.push(i)}),this._logger.header();try{this._logger.info("Configuring build ...");let i=null;if(0===t.free.length)yabs.util.exists(yabs.DEFAULT_BUILD_ALL_FILE)?i=new yabs.BuildConfig(yabs.DEFAULT_BUILD_ALL_FILE):yabs.util.exists(yabs.DEFAULT_BUILD_FILE)&&(i=new yabs.BuildConfig(yabs.DEFAULT_BUILD_FILE));else{var e=t.free[0];if(!yabs.util.exists(e))throw"Cannot find file: "+e;i=new yabs.BuildConfig(e)}if(!i)throw"Missing input file!";i.isBatchBuild()?await new yabs.BatchBuilder(this._logger,i,t).build():await new yabs.Builder(this._logger,i,t).build()}catch(i){this._logger.error(i),this._logger.out("\nBuild aborted.")}this._logger.endl()}},(new yabs.Application).main(process.argv);